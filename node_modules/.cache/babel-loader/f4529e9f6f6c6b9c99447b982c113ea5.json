{"ast":null,"code":"class ApplicationError extends Error {\n  /**\n   * Custom error handler for all errors\n   * @param {Object} param0.error The error object of axios or a custom error object.\n   * @param {String} param0.status When passed, this statuscode overrides the statuscode of the error object.\n   * @param {String} param0.message When passed, this message overrides the message of the error object.\n   */\n  constructor() {\n    let {\n      error,\n      status,\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let messageText = \"\";\n\n    if (error) {\n      var _error$data;\n\n      messageText = message || (error === null || error === void 0 ? void 0 : error.message) || (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || \"Something went wrong. Please try again later.\";\n    } else {\n      messageText = message || \"Something went wrong. Please try again later.\";\n    }\n\n    const messageStatus = status || error && error.status || 500;\n    messageText = `${messageText}`;\n    super(messageText);\n    this.name = this.constructor.name;\n    this.message = messageText;\n    this.data = error && (error.data || error) || {\n      message: messageText\n    };\n    this.status = messageStatus;\n    this.headers = error && error.headers ? { ...error.headers\n    } : {};\n    if (!error && Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n\nexport default ApplicationError;","map":{"version":3,"names":["ApplicationError","Error","constructor","error","status","message","messageText","data","messageStatus","name","headers","captureStackTrace"],"sources":["/Users/bkarisik/Documents/Test/sawpi_frontend/swapi_front/src/utils/ApplicationError.js"],"sourcesContent":["class ApplicationError extends Error {\n  /**\n   * Custom error handler for all errors\n   * @param {Object} param0.error The error object of axios or a custom error object.\n   * @param {String} param0.status When passed, this statuscode overrides the statuscode of the error object.\n   * @param {String} param0.message When passed, this message overrides the message of the error object.\n   */\n  constructor({ error, status, message } = {}) {\n    let messageText = \"\";\n    if (error) {\n      messageText =\n        message || error?.message || error?.data?.message || \"Something went wrong. Please try again later.\";\n    } else {\n      messageText = message || \"Something went wrong. Please try again later.\";\n    }\n    const messageStatus = status || (error && error.status) || 500;\n    messageText = `${messageText}`;\n    super(messageText);\n    this.name = this.constructor.name;\n    this.message = messageText;\n    this.data = (error && (error.data || error)) || { message: messageText };\n    this.status = messageStatus;\n    this.headers = error && error.headers ? { ...error.headers } : {};\n\n    if (!error && Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport default ApplicationError;\n"],"mappings":"AAAA,MAAMA,gBAAN,SAA+BC,KAA/B,CAAqC;EACnC;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,GAAkC;IAAA,IAAjC;MAAEC,KAAF;MAASC,MAAT;MAAiBC;IAAjB,CAAiC,uEAAJ,EAAI;IAC3C,IAAIC,WAAW,GAAG,EAAlB;;IACA,IAAIH,KAAJ,EAAW;MAAA;;MACTG,WAAW,GACTD,OAAO,KAAIF,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEE,OAAX,CAAP,KAA6BF,KAA7B,aAA6BA,KAA7B,sCAA6BA,KAAK,CAAEI,IAApC,gDAA6B,YAAaF,OAA1C,KAAqD,+CADvD;IAED,CAHD,MAGO;MACLC,WAAW,GAAGD,OAAO,IAAI,+CAAzB;IACD;;IACD,MAAMG,aAAa,GAAGJ,MAAM,IAAKD,KAAK,IAAIA,KAAK,CAACC,MAA1B,IAAqC,GAA3D;IACAE,WAAW,GAAI,GAAEA,WAAY,EAA7B;IACA,MAAMA,WAAN;IACA,KAAKG,IAAL,GAAY,KAAKP,WAAL,CAAiBO,IAA7B;IACA,KAAKJ,OAAL,GAAeC,WAAf;IACA,KAAKC,IAAL,GAAaJ,KAAK,KAAKA,KAAK,CAACI,IAAN,IAAcJ,KAAnB,CAAN,IAAoC;MAAEE,OAAO,EAAEC;IAAX,CAAhD;IACA,KAAKF,MAAL,GAAcI,aAAd;IACA,KAAKE,OAAL,GAAeP,KAAK,IAAIA,KAAK,CAACO,OAAf,GAAyB,EAAE,GAAGP,KAAK,CAACO;IAAX,CAAzB,GAAgD,EAA/D;IAEA,IAAI,CAACP,KAAD,IAAUF,KAAK,CAACU,iBAApB,EAAuCV,KAAK,CAACU,iBAAN,CAAwB,IAAxB,EAA8B,KAAKT,WAAnC;EACxC;;AAzBkC;;AA4BrC,eAAeF,gBAAf"},"metadata":{},"sourceType":"module"}